# https://atcoder.jp/contests/agc036/tasks/agc036_a
# 原点を固定すると、p1×p2=Sが成り立つ。
# 式変形するとS=x1y2-x2y1⇔x1y2-S=x2y1である。ここで、x1y2を仮にint(√S+1)^2としてみると、
# int(√S+1)^2 -S=x2y1 が成り立つx2とy1を見つければ良い。(int(√S+1)^2 -S の約数を見つければ良い)
# int(√S+1)^2-S <= 1+2int(√S)程度であり,これの約数列挙はO(√√S)であるため、S<=10^18という非常な大きな制約でも10^4.5回程度のループで処理が可能
# でもこれってint(√S+1)^2-Sが10^9~2*10^9内の素数だと死ぬよね

# 解説解法
# 原点を固定すると、p1×p2=Sが成り立つ。
# 式変形するとS=x1y2-x2y1⇔x1y2-S=x2y1である。
# 一つの点を(10^9,1)に固定したとする。これを外積の式に代入すると
# S=10^9 y2 + (- x2)となる。これは商と余りの式である。
# x2!=0のとき、3つ目の点は y2-1, 10^9-x2 = S divmod 10^9 である。∵S=10^9 (y2-1) + (10^9-x2)
# x2==0のときはy2//10^9である。


ra = range
enu = enumerate
S = int(input())
a, b = divmod(S, 10 ** 9)
if b == 0:
    y2 = a
    x2 = 0
else:
    y2 = a + 1
    x2 = 10 ** 9 - b

print(0, 0, 10 ** 9, 1, x2, y2)
